from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from filters.chek_admin import IsAdmin, Admin
from utils.db_api.database import Customer
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher.storage import FSMContext

customer_db = Customer()
admin_db = Admin()

from loader import bot

from loader import dp

class User_block(StatesGroup):
    Q1 = State()

@dp.message_handler(IsAdmin(), commands='block_user')
async def admin(message: types.Message):
    await message.answer('–î–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º ID:üëá \n\n(—á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –µ—Å—Ç—å –≤ –ë–∞–∑–µ –î–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /show_users)')

    await User_block.Q1.set()

@dp.message_handler(state=User_block.Q1)
async def admin(message: types.Message, state: FSMContext):
    answer_q1 = message.text
    # print(customer_db.find_customer_id(answer_q1))
    i = admin_db.blocked_customer(answer_q1)
    print(i)
    if i == True:
        await message.answer(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å–±—ã–ª —Å ID {answer_q1} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–æ—Ç–æ–º \n\n'
        '(–ß—Ç–æ–±–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /unblock_user)')
    else:
        await message.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
    await state.finish() 
